apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "poktroll.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ include "poktroll.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "poktroll.fullname" . }}
        pokt.network/purpose: validator
    spec:
      initContainers:
      # TODO(@okdas): move the ConfigMaps script logic onto the init container
{{ if .Values.persistence.cleanupBeforeEachStart }}
      - name: "cleanup-datadir"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        command: ["/bin/sh"]
        args:
         - -c
         - rm -rf /root/.pocket/data/*
        volumeMounts:
          - name: data-volume
            mountPath: /root/.pocket/data/
{{ end }}
      - name: "prepare-node"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        command: ["/bin/sh"]
{{ if .Values.prod.enabled }}
        args: ["/scripts/prod.sh"]
{{ else }}
        args: ["/scripts/dev.sh"]
{{ end }}
        volumeMounts:
          - name: scripts-volume
            mountPath: /scripts
          - name: keys-source-volume
            mountPath: /root/.pocket/keyring-test/
          - name: configs-source-volume
            mountPath: /root/.pocket/config-src/
          - name: data-volume
            mountPath: /root/.pocket/data/
          - name: pocket-volume
            mountPath: /root/.pocket/
      containers:
        - name: poktrolld-validator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
{{ toYaml .Values.podSecurityContext | indent 12 }}
          ports:
            - containerPort: {{ .Values.service.rpcPort }}
              name: rpc
            - containerPort: 40004 # TODO(@okdas): remove this - currently only needed for LocalNet dlv
              name: debug
            - containerPort: {{ .Values.service.grpcPort }}
              name: grpc
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.rpcPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.rpcPort }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              exec poktrolld start --home=/root/.pocket/ --rpc.laddr=tcp://0.0.0.0:36657 --p2p.laddr="0.0.0.0:36656" --grpc.address=0.0.0.0:36658
          volumeMounts:
            - name: scripts-volume
              mountPath: /scripts
            - name: keys-source-volume
              mountPath: /root/.pocket/keyring-test/
            - name: configs-source-volume
              mountPath: /root/.pocket/config-src/
            - name: data-volume
              mountPath: /root/.pocket/data/
            - name: pocket-volume
              mountPath: /root/.pocket/
      volumes:
        - name: scripts-volume
          configMap:
            name: {{ include "poktroll.fullname" . }}-scripts
        - name: keys-source-volume
          configMap:
            name: {{ .Values.keysConfigMapName }}
        - name: configs-source-volume
          configMap:
            name: {{ .Values.configsConfigMapName }}
        - name: data-volume
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (printf "%s-data" (include "poktroll.fullname" .)) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: pocket-volume
          emptyDir: {}

