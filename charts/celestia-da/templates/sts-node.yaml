{{- if .Values.celestiaNode.enabled }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Values.global.name }}-{{ .Values.celestiaNode.type }}"
  labels:
    app: "celestia-{{ .Values.celestiaNode.type }}"
    {{- toYaml .Values.global.labels | trim | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "celestia-{{ .Values.celestiaNode.type }}"
      {{- toYaml .Values.global.labels | trim | nindent 6 }}
  serviceName: "{{ .Values.global.name }}-{{ .Values.celestiaNode.type}}-node--svc"
  template:
    metadata:
      labels:
        app: "celestia-{{ .Values.celestiaNode.type }}"
        {{- toYaml .Values.global.labels | trim | nindent 8 }}
    spec:
      {{- if .Values.global.nodePool.enabled }}
      {{- include "workload.nodepool" . | nindent 6 }}
      {{- end }}
      securityContext:
        fsGroup: 10001
        fsGroupChangePolicy: "OnRootMismatch"
      initContainers:
        - name: celestia-da-init
          image: "{{ .Values.celestiaNode.image.registry }}/{{ tpl .Values.celestiaNode.image.repository . }}/{{ tpl .Values.celestiaNode.image.name . }}:{{ .Values.celestiaNode.image.tag }}"
          command:
            - /bin/celestia-da
            - {{ .Values.celestiaNode.type }}
            - init
            - --node.store
            - {{ tpl .Values.celestiaNode.home.path . }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            # Celestia Node node home directory
            - name: {{ tpl .Values.celestiaNode.home.volume.name . }}
              mountPath: {{ tpl .Values.celestiaNode.home.path . }}
      containers:
        #### CELESTIA NODE ####
        - name: "{{ .Values.global.name }}-{{ .Values.celestiaNode.type }}"
          image: "{{ .Values.celestiaNode.image.registry }}/{{ tpl .Values.celestiaNode.image.repository . }}/{{ tpl .Values.celestiaNode.image.name . }}:{{ .Values.celestiaNode.image.tag }}"
          command:
            - /bin/celestia-da
            - {{ .Values.celestiaNode.type }}
            - start
            - --node.store={{ tpl .Values.celestiaNode.home.path . }}
            - --core.ip={{ .Values.celestiaNode.coreIp }}
            - --p2p.network={{ .Values.celestiaNode.network }}
            - --da.grpc.namespace={{ .Values.dataAvailability.namespace }}
            - --da.grpc.listen={{ .Values.dataAvailability.grpc_listen }}
            {{- if .Values.celestiaNode.celKey.enabled }}
            - --keyring.backend=test
            - --keyring.accname={{ .Values.celestiaNode.celKey.validatorInfo.fileName }}
            {{- end }}
          imagePullPolicy: {{ .Values.celestiaNode.image.pullPolicy }}
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
        {{- if .Values.celestiaNode.ports }}
          ports:
          {{- range .Values.celestiaNode.ports }}
            - containerPort: {{ .port }}
              name: {{ tpl .name $ }}
              protocol: TCP
          {{- end }}
        {{- end }}
        {{- if .Values.celestiaNode.resources }}
          resources:
            {{- toYaml .Values.celestiaNode.resources | trim | nindent 12 }}
        {{- end }}
          volumeMounts:
            # Node home directory
            - name: {{ tpl .Values.celestiaNode.home.volume.name . }}
              mountPath: {{ tpl .Values.celestiaNode.home.path . }}
              # Node config.toml file
            - name: {{ tpl .Values.celestiaNode.config.configmapName . }}-{{ tpl .Values.celestiaNode.type . }}
              mountPath: "{{ tpl .Values.celestiaNode.home.path . }}/{{ .Values.celestiaNode.config.file }}"
              subPath: {{ .Values.celestiaNode.config.file }}
            {{- if .Values.celestiaNode.celKey.enabled }}
            - mountPath: "{{ tpl .Values.celestiaNode.home.path . }}/keys/keyring-test/{{ .Values.celestiaNode.celKey.address.fileName }}"
              name: "celkey-address-file"
              subPath: {{ .Values.celestiaNode.celKey.address.fileName }}
            - mountPath: "{{ tpl .Values.celestiaNode.home.path . }}/keys/keyring-test/{{ .Values.celestiaNode.celKey.validatorInfo.fileName }}"
              name: "celkey-validator-info"
              subPath: {{ .Values.celestiaNode.celKey.validatorInfo.fileName }}
            {{- end }}
      volumes:
        # ------------ CELESTIA NODE ------------
        # Home directory volume
        - name: {{ tpl .Values.celestiaNode.home.volume.name . }}
          persistentVolumeClaim:
            claimName: {{ tpl .Values.celestiaNode.home.volume.name . }}
        {{- if .Values.celestiaNode.celKey.enabled }}
        # Cel-key files
        - name: celkey-address-file
          secret:
            secretName: {{ .Values.celestiaNode.celKey.address.secretName }}
        - name: celkey-validator-info
          secret:
            secretName: {{ .Values.celestiaNode.celKey.validatorInfo.secretName }}
        {{- end }}
        # Config file volume
        - configMap:
            defaultMode: 420
            items:
              - key: {{ .Values.celestiaNode.config.file }}
                path: {{ .Values.celestiaNode.config.file }}
            name: {{ .Values.celestiaNode.config.configmapName }}-{{ .Values.celestiaNode.type }}
          name: {{ .Values.celestiaNode.config.configmapName }}-{{ .Values.celestiaNode.type }}
{{- end }}
