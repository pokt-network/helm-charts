# Default values for appgate-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/pokt-network/poktrolld
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

configsConfigMapName: poktrolld-configs # TODO(@okdas): provision in the chart
keysSecretName: ""

config:
  # Whether the server should sign all incoming requests with its own ring (for applications)
  self_signing: true
  # The name of the key (in the keyring) that will be used to sign relays
  signing_key: app1
  # The host and port that the appgate server will listen on
  listening_endpoint: http://0.0.0.0:42069
  # Pocket node URL that exposes CometBFT JSON-RPC API.
  # This can be used by the Cosmos client SDK, event subscriptions, etc...
  query_node_rpc_url: tcp://poktroll-validator:36657
  # Pocket node URL that exposes the Cosmos gRPC service, dedicated to querying purposes.
  query_node_grpc_url: tcp://poktroll-validator:36658
  metrics:
    enabled: true
    # If changing port here, make sure to adjust `metrics.serviceMonitor.port`
    addr: :9090

development:
  delve:
    enabled: false
    laddr: :40004

keyringBackend: test

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 42069

metrics:
  serviceMonitor:
    enabled: false
  port: 9090

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
