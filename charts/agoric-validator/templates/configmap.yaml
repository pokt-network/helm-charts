apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-scripts
  namespace: {{ .Release.Namespace }}
data:
  fund_foreigner.sh: |
    #!/usr/bin/env bash
    set -e

    . /usr/src/upgrade-test-scripts/env_setup.sh

    echo "üíµ Funding foreigner account - Waiting for Agoric chain to start..."

    # Wait for 2 blocks to ensure chain is stable
    waitForBlock 2

    echo "üí∏ Agoric chain is up - funding foreigner account"

    # Fund the foreigner account with 100 UBLD for testing
    if ! agd tx bank send \
      validator \
      $(agd keys show -a foreigner --keyring-backend=test) \
      100000000ubld \
      --keyring-backend=test \
      --chain-id=agoriclocal \
      --yes; then
      echo "‚ùå Failed to fund foreigner account"
      exit 1
    fi

    # Wait for transaction confirmation
    waitForBlock 1
    echo "üí∞ Foreigner account funded successfully!"

  entrypoint.sh: |
    #!/bin/bash
    set -e

    echo "üöÄ Starting Agoric validator node..."

    # Import test account from mnemonic
    # WARNING: This mnemonic is for testing only - never use in production
    echo "{{ .Values.mnemonic }}" | agd keys add foreigner --keyring-backend=test --recover

    . /usr/src/upgrade-test-scripts/env_setup.sh

    # Start funding script in background if enabled
    {{- if .Values.fund_on_start }}
    echo "üìà Starting automatic funding for test account"
    /usr/src/upgrade-test-scripts/fund_foreigner.sh &
    {{- end }}

    # Check if debug mode is enabled
    if [ -n "$DELVE_PORT" ]; then
      echo "üêõ Debug mode requested but not yet supported in container"
      echo "üöß Use: 'make agd_shell', then './start_agd_debug.sh' to debug locally"
      sleep infinity
    else
      echo "‚ñ∂Ô∏è Starting Agoric daemon"
      /usr/src/upgrade-test-scripts/start_agd.sh
    fi

  # Debug script - currently experimental
  # TODO: Resolve debugging issues with container environment
  # References:
  # ‚Ä¢ Discord: https://discord.com/channels/585576150827532298/1366728719141441598/1366789646230622289
  # ‚Ä¢ GitHub PR: https://github.com/Agoric/agoric-sdk/pull/8002
  start_agd_debug.sh: |
    #!/bin/bash
    set -e

    # Import the "foreigner" key from the mnemonic
    cat /usr/src/upgrade-test-scripts/foreigner.mnemonic | agd keys add foreigner --keyring-backend=test --hd-path="m/44'/118'/0'/0/0" --recover

    #. /usr/src/upgrade-test-scripts/env_setup.sh
    . /root/.bashrc

    # start_agd never builds an image so it's safe to include this multigigabyte logfile
    export SLOGFILE=slog.slog

    echo "Starting agd debugger in foreground"

    # Remote delve
    #dlv exec --headless --accept-multiclient --api-version=2 --listen=:$DELVE_PORT $(which agd) -- start --log_level warn "$@"

    # Local delve (use make `agd_shell`, then `./entrypoint.sh`)
    #dlv exec $(which agd) -- start --log_level warn "$@"

    # Remote gdb
    #gdbserver agd start --log_level warn "$@"

    # Local gdb
    #gdb --args agd start --log_level warn "$@"
